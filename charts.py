# -*- coding: utf-8 -*-
"""Charts.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1iV2pfkV7lFcPKE19vqcwaREExx3NciZM

## **Generating Charts**

### G1 - correlação X distância geográfica: espero uma nuvem de pontos, com (talvez) média bem definida (como em Ceron et al. 2019 - pasta literatura)
"""

import pandas as pd

dist = pd.read_excel('Matriz2_Distancias_ZT.xlsx')
dist.drop('ZT', axis=1, inplace=True)
dist.index += 1
dist.head()

correlations = pd.read_csv('correlationsX1X2Corr.csv')
correlations = correlations.astype({"X1": int, "X2": int})
correlations.head()

correlations['dist'] = correlations.apply(lambda x: dist.iloc[int(x[0])-1, int(x[1])-1], axis=1)
correlations

dist_versus_correlations = correlations[['dist', 'corr']]
dist_versus_correlations

"""###Sorting daframe"""

dist_versus_correlations = dist_versus_correlations.sort_values(by ='dist')
dist_versus_correlations
# dist_versus_correlations.fillna(0)

import math

max_dist = dist_versus_correlations.loc[dist_versus_correlations['dist'].idxmax()]

ceil = math.ceil(max_dist['dist'])+1000

maxs = []
mins = []
means = []

for i in range(0, ceil, 1000):
  interval = dist_versus_correlations[dist_versus_correlations['dist'].between(i, i+1000)]
  
  if(len(interval)>0):
    corr_mean = interval['corr'].mean()
    dist_mean = interval['dist'].mean()
    means.append((corr_mean, dist_mean))
    
    max = interval.loc[interval['corr'].idxmax()]
    min = interval.loc[interval['corr'].idxmin()]
    maxs.append((max['corr'], dist_mean))
    mins.append((min['corr'], dist_mean))
       
mins_dataframe = pd.DataFrame(mins)
maxs_dataframe = pd.DataFrame(maxs)
means_dataframe = pd.DataFrame(means)

mins_dataframe.columns ={'corr', 'dist'}
maxs_dataframe.columns ={'corr', 'dist'}
means_dataframe.columns ={'corr', 'dist'}

# print(maxs_dataframe)
# print(means_dataframe)

means_dataframe
import matplotlib.pyplot as plt
import numpy as np

plt.figure(figsize=(12,10))

plt.plot(mins_dataframe['dist'], mins_dataframe['corr'], 'o', label='Min Dist')
plt.plot(maxs_dataframe['dist'], maxs_dataframe['corr'], 'o', label='Max Dist')
plt.plot(means_dataframe['dist'], means_dataframe['corr'], 'o', label='Mean Dist')
plt.title('Distance(m) X Correlation')
plt.ylabel('Correlation')
plt.xlabel('Distance (m)')
plt.legend()
plt.show()

# import matplotlib.pyplot as plt
# import numpy as np

# # #Normalizing Distance Column
# # from sklearn import preprocessing

# # min_max_scaler = preprocessing.MinMaxScaler()
# # np_scaled = min_max_scaler.fit_transform(dist_versus_correlations)
# # cols = {'dist', 'corr'}
# # dist_versus_correlations_normalized = pd.DataFrame(np_scaled, columns = cols)
# # dist_versus_correlations_normalized

# # ax1 = dist_versus_correlations_normalized.plot.scatter(x='corr', y='dist', c='DarkBlue', figsize=(15, 15))
# ax1 = dist_versus_correlations.plot.scatter(x='dist', y='corr', c='DarkBlue', figsize=(15, 15))

# plt.xticks(np.arange(0, max(dist_versus_correlations['dist']+2000), step=2000))
# plt.yticks(np.arange(0, 1.2, step=0.2))
# plt.xlabel('Distance (m)')
# plt.ylabel('Correlation')
# plt.title('Distance (m) X Correlation')
# plt.savefig('dist_versus_correlations.pdf')

# plt.show()

"""### G2 - correlação X mobilidade: espero uma nuvem de pontos ainda (talvez menos poluída do que no caso anterior) - e vale a pena ver a correlação média para cada valor de faixa de mobilidade"""

import pandas as pd

mob = pd.read_excel('Matriz1_OD.xlsx')
mob.drop('x', axis=1, inplace=True)
mob.index += 1
mob.head()

def sum_mob(x):
  return (mob.iloc[int(x[0])-1, int(x[1])-1]+mob.iloc[int(x[1])-1, int(x[0])-1])

correlations = pd.read_csv('correlationsX1X2Corr.csv')
correlations = correlations.astype({"X1": int, "X2": int})
correlations.head()

correlations['mob'] = correlations.apply(lambda x: sum_mob(x), axis=1)
correlations.head()

mob_versus_correlations = correlations[['mob', 'corr']]
mob_versus_correlations.head()

mob_versus_correlations = mob_versus_correlations.sort_values(by ='mob')
mob_versus_correlations
mob_versus_correlations.fillna(0)

import math

max_dist = mob_versus_correlations.loc[mob_versus_correlations['mob'].idxmax()]

ceil = math.ceil(max_dist['mob'])+1000

maxs = []
mins = []
means = []

for i in range(0, ceil, 1000):
  interval = mob_versus_correlations[mob_versus_correlations['mob'].between(i, i+1000)]
  
  if(len(interval)>0):
    corr_mean = interval['corr'].mean()
    mob_mean = interval['mob'].mean()
    means.append((corr_mean, mob_mean))

    max = interval.loc[interval['corr'].idxmax()]
    min = interval.loc[interval['corr'].idxmin()]
    maxs.append((max['corr'], mob_mean))
    mins.append((min['corr'], mob_mean))

   

mins_dataframe = pd.DataFrame(mins)
maxs_dataframe = pd.DataFrame(maxs)
means_dataframe = pd.DataFrame(means)

mins_dataframe.columns ={'corr', 'mob'}
maxs_dataframe.columns ={'corr', 'mob'}
means_dataframe.columns ={'corr', 'mob'}

import matplotlib.pyplot as plt
import numpy as np

plt.figure(figsize=(12,10))

plt.plot(mins_dataframe['mob'], mins_dataframe['corr'], 'o', label='Min Correlation')
plt.plot(maxs_dataframe['mob'], maxs_dataframe['corr'], 'o', label='Max Correlation')
plt.plot(means_dataframe['mob'], means_dataframe['corr'], 'o', label='Mean Correlation')
plt.title('Mob X Correlation')
plt.ylabel('Correlation')
plt.xlabel('Mobilidade')
plt.legend()
plt.show()

# import matplotlib.pyplot as plt

# ax1 = mob_versus_correlations.plot.scatter(x='mob', y='corr', c='DarkRed', figsize=(15, 15))

# plt.xlabel('Mob')
# plt.ylabel('Correlation')
# plt.title('Mob X Correlation')
# plt.savefig('mob_versus_correlations.pdf')

# plt.show()

"""###G3 - análogo ao 1 mas considerando a correlação máxima (com atraso), e vér media por faixa"""

import pandas as pd

dist = pd.read_excel('Matriz2_Distancias_ZT.xlsx')
dist.drop('ZT', axis=1, inplace=True)
dist.index += 1

dist.head()

correlations = pd.read_csv('maxCorrelations.csv')
correlations.drop('Unnamed: 0', axis=1, inplace=True)
correlations.head()

data = correlations.astype({"X1": int, "X2": int})
data = data[['X1', 'X2', 'highest_corr']]
data.head()

data['dist'] = data.apply(lambda x: dist.iloc[int(x[0])-1, int(x[1])-1], axis=1)
data.head()

data = data[['highest_corr', 'dist']]
data.head()

data = data.sort_values(by ='dist')
data
data.fillna(0)

import math

max_dist = data.loc[dist_versus_correlations['dist'].idxmax()]

ceil = math.ceil(max_dist['dist'])+1000

maxs = []
mins = []
means = []

for i in range(0, ceil, 1000):
  interval = data[data['dist'].between(i, i+1000)]
  
  if(len(interval)>0):
    max = interval.loc[interval['highest_corr'].idxmax()]
    min = interval.loc[interval['highest_corr'].idxmin()]
    maxs.append((max['highest_corr'], max['dist']))
    mins.append((min['highest_corr'], min['dist']))

    corr_mean = interval['highest_corr'].mean()
    dist_mean = interval['dist'].mean()
    means.append((corr_mean, dist_mean))

mins_dataframe = pd.DataFrame(mins)
maxs_dataframe = pd.DataFrame(maxs)
means_dataframe = pd.DataFrame(means)

mins_dataframe.columns ={'highest_corr', 'dist'}
maxs_dataframe.columns ={'highest_corr', 'dist'}
means_dataframe.columns ={'highest_corr', 'dist'}

import matplotlib.pyplot as plt
import numpy as np

plt.plot(mins_dataframe['dist'], mins_dataframe['highest_corr'], 'o', label='Min Dist')
plt.plot(maxs_dataframe['dist'], maxs_dataframe['highest_corr'], 'o', label='Max Dist')
plt.plot(means_dataframe['dist'], maxs_dataframe['highest_corr'], 'o', label='Mean Dist')
plt.title('Distance(m) X Correlation')
plt.ylabel('Highest Correlation')
plt.xlabel('Distance (m)')
plt.legend()
plt.show()

# import matplotlib.pyplot as plt

# # #Normalizing Distance Column
# # from sklearn import preprocessing

# # min_max_scaler = preprocessing.MinMaxScaler()
# # np_scaled = min_max_scaler.fit_transform(dist_versus_correlations)
# # cols = {'highest_corr', 'dist'}
# # data_normalized = pd.DataFrame(np_scaled, columns = cols)
# # data_normalized

# # ax1 = data_normalized.plot.scatter(x='highest_corr', y='dist', c='DarkBlue', figsize=(15, 15))
# ax1 = data.plot.scatter(x='dist', y='highest_corr', c='DarkBlue', figsize=(15, 15))

# plt.xlabel('Distance (m)')
# plt.ylabel('Highest Correlation')
# plt.title('Distance (m) X Highest Correlation')
# plt.savefig('distance_versus_highest_correlation.pdf')

# plt.show()

"""###G4 - análogo ao 2 mas considerando a correlação máxima (com atraso), e vér media por faixa"""

import pandas as pd

mob = pd.read_excel('Matriz1_OD.xlsx')
mob.drop('x', axis=1, inplace=True)
mob.index += 1
mob.head()

correlations = pd.read_csv('maxCorrelations.csv')
correlations.drop('Unnamed: 0', axis=1, inplace=True)
correlations = correlations.astype({"X1": int, "X2": int})
correlations.head()

def sum_mob(x):
  return (mob.iloc[int(x[0])-1, int(x[1])-1]+mob.iloc[int(x[1])-1, int(x[0])-1])

correlations['mob'] = correlations.apply(lambda x: sum_mob(x), axis=1)
correlations.head()

mob_versus_max_correlations = correlations[['mob', 'highest_corr']]
mob_versus_max_correlations.head()

mob_versus_max_correlations = mob_versus_max_correlations.sort_values(by ='mob')
mob_versus_max_correlations
mob_versus_max_correlations.fillna(0)

import math

max_dist = mob_versus_max_correlations.loc[mob_versus_max_correlations['mob'].idxmax()]

ceil = math.ceil(max_dist['mob'])+1000

maxs = []
mins = []
means = []

for i in range(0, ceil, 1000):
  interval = mob_versus_max_correlations[mob_versus_max_correlations['mob'].between(i, i+1000)]
  
  if(len(interval)>0):
    max = interval.loc[interval['highest_corr'].idxmax()]
    min = interval.loc[interval['highest_corr'].idxmin()]
    maxs.append((max['highest_corr'], max['mob']))
    mins.append((min['highest_corr'], min['mob']))

    corr_mean = interval['highest_corr'].mean()
    dist_mean = interval['mob'].mean()
    means.append((corr_mean, dist_mean))

mins_dataframe = pd.DataFrame(mins)
maxs_dataframe = pd.DataFrame(maxs)
means_dataframe = pd.DataFrame(means)

mins_dataframe.columns ={'highest_corr', 'mob'}
maxs_dataframe.columns ={'highest_corr', 'mob'}
means_dataframe.columns ={'highest_corr', 'mob'}

import matplotlib.pyplot as plt
import numpy as np

plt.plot(mins_dataframe['mob'], mins_dataframe['highest_corr'], 'o', label='Min Correlation')
plt.plot(maxs_dataframe['mob'], maxs_dataframe['highest_corr'], 'o', label='Max Correlation')
plt.plot(means_dataframe['mob'], maxs_dataframe['highest_corr'], 'o', label='Mean Correlation')
plt.title('Mob X Correlation')
plt.ylabel('Highest Correlation')
plt.xlabel('Mobilidade')
plt.legend()
plt.show()

# import matplotlib.pyplot as plt

# ax1 = mob_versus_max_correlations.plot.scatter(x='mob', y='highest_corr', c='DarkRed', figsize=(15, 15))

# plt.xlabel('Mob')
# plt.ylabel('Highest Correlation')
# plt.title('Mob X Highest Correlation')
# plt.savefig('mob_versus_highest_correlation.pdf')

# plt.show()

"""###G5 - atraso X distância geográfica, e vér media por faixa"""

import pandas as pd

dist = pd.read_excel('Matriz2_Distancias_ZT.xlsx')
dist.drop('ZT', axis=1, inplace=True)
dist.index += 1
dist.head()

correlations = pd.read_csv('maxCorrelations.csv')
correlations.drop('Unnamed: 0', axis=1, inplace=True)

data = correlations.astype({"X1": int, "X2": int})
data.head()

data = data[['X1', 'X2', 'highest_k']]
data['dist'] = correlations.apply(lambda x: dist.iloc[int(x[0])-1, int(x[1])-1], axis=1)
data = data[['highest_k', 'dist']]
data.head()

def return_k(highest_k):
  start_pt = highest_k.find("=")
  end_pt = highest_k.find("\'", start_pt + 1) 
  quote = highest_k[start_pt + 1: end_pt]
  return(quote)

data['highest_k_values'] = data.apply(lambda x: return_k(x[0]), axis=1)
data['highest_k_values'] = data['highest_k_values'].replace('[', 'NaN')
data = data.astype({"highest_k_values": float})
data.head()

data = data.sort_values(by ='dist')
data
data.fillna(0)

import math

max_dist = data.loc[dist_versus_correlations['dist'].idxmax()]

ceil = math.ceil(max_dist['dist'])+1000

maxs = []
mins = []
means = []

for i in range(0, ceil, 1000):
  interval = data[data['dist'].between(i, i+1000)]
  
  if(len(interval)>0):
    max = interval.loc[interval['highest_k_values'].idxmax()]
    min = interval.loc[interval['highest_k_values'].idxmin()]
    maxs.append((max['highest_k_values'], max['dist']))
    mins.append((min['highest_k_values'], min['dist']))

    corr_mean = interval['highest_k_values'].mean()
    dist_mean = interval['dist'].mean()
    means.append((corr_mean, dist_mean))

mins_dataframe = pd.DataFrame(mins)
maxs_dataframe = pd.DataFrame(maxs)
means_dataframe = pd.DataFrame(means)

mins_dataframe.columns ={'highest_k_values', 'dist'}
maxs_dataframe.columns ={'highest_k_values', 'dist'}
means_dataframe.columns ={'highest_k_values', 'dist'}

import matplotlib.pyplot as plt
import numpy as np

plt.plot(mins_dataframe['dist'], mins_dataframe['highest_k_values'], 'o', label='Min Dist')
plt.plot(maxs_dataframe['dist'], maxs_dataframe['highest_k_values'], 'o', label='Max Dist')
plt.plot(means_dataframe['dist'], maxs_dataframe['highest_k_values'], 'o', label='Mean Dist')
plt.title('Distance(m) X Highest k')
plt.ylabel('Highest k')
plt.xlabel('Distance (m)')
plt.legend()
plt.show()

# import matplotlib.pyplot as plt

# ax1 = data.plot.scatter(x='dist', y='highest_k_values', c='DarkBlue', figsize=(15, 15))

# plt.xlabel('Distance (m)')
# plt.ylabel('Highest k')
# plt.title('Distance (m) X Highest k')
# plt.savefig('distance_versus_highest_k.pdf')

# plt.show()

"""###G6 - atraso X mobilidade, e vér media por faixa"""

import pandas as pd

mob = pd.read_excel('Matriz1_OD.xlsx')
mob.drop('x', axis=1, inplace=True)
mob.index += 1
mob.head()

correlations = pd.read_csv('maxCorrelations.csv')
correlations.drop('Unnamed: 0', axis=1, inplace=True)

data = correlations.astype({"X1": int, "X2": int})
data = data[['X1', 'X2', 'highest_k']]

def sum_mob(x):
  return (mob.iloc[int(x[0])-1, int(x[1])-1]+mob.iloc[int(x[1])-1, int(x[0])-1])

data['mob'] = correlations.apply(lambda x: sum_mob(x), axis=1)
data = data[['highest_k', 'mob']]
data.head()

def return_k(highest_k):
  start_pt = highest_k.find("=")
  end_pt = highest_k.find("\'", start_pt + 1) 
  quote = highest_k[start_pt + 1: end_pt]
  return(quote)

data['highest_k_values'] = data.apply(lambda x: return_k(x[0]), axis=1)
data['highest_k_values'] = data['highest_k_values'].replace('[', 'NaN')
data = data.astype({"highest_k_values": float})
data.head()

data = data.sort_values(by ='mob')
data
data.fillna(0)

import math

max_dist = data.loc[data['mob'].idxmax()]

ceil = math.ceil(max_dist['mob'])+1000

maxs = []
mins = []
means = []

for i in range(0, ceil, 1000):
  interval = data[data['mob'].between(i, i+1000)]
  
  if(len(interval)>0):
    max = interval.loc[interval['highest_k_values'].idxmax()]
    min = interval.loc[interval['highest_k_values'].idxmin()]
    maxs.append((max['highest_k_values'], max['mob']))
    mins.append((min['highest_k_values'], min['mob']))

    corr_mean = interval['highest_k_values'].mean()
    dist_mean = interval['mob'].mean()
    means.append((corr_mean, dist_mean))

mins_dataframe = pd.DataFrame(mins)
maxs_dataframe = pd.DataFrame(maxs)
means_dataframe = pd.DataFrame(means)

mins_dataframe.columns ={'highest_k_values', 'mob'}
maxs_dataframe.columns ={'highest_k_values', 'mob'}
means_dataframe.columns ={'highest_k_values', 'mob'}

import matplotlib.pyplot as plt
import numpy as np

plt.plot(mins_dataframe['mob'], mins_dataframe['highest_k_values'], 'o', label='Min Correlation')
plt.plot(maxs_dataframe['mob'], maxs_dataframe['highest_k_values'], 'o', label='Max Correlation')
plt.plot(means_dataframe['mob'], maxs_dataframe['highest_k_values'], 'o', label='Mean Correlation')
plt.title('Mob X Highest k')
plt.ylabel('Highest k')
plt.xlabel('Mob')
plt.legend()
plt.show()

# import matplotlib.pyplot as plt

# ax1 = data.plot.scatter(x='mob', y='highest_k_values', c='DarkRed', figsize=(15, 15))

# plt.xlabel('Mob')
# plt.ylabel('Highest k')
# plt.title('Mob x Highest k')
# plt.savefig('mob_versus_highest_k.pdf')

# plt.show()

